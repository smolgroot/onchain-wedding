import { Signer, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../../common";
import type { PermissionedEIP712Proxy, PermissionedEIP712ProxyInterface } from "../../../../../contracts/eip712/proxy/examples/PermissionedEIP712Proxy";
type PermissionedEIP712ProxyConstructorParams = [signer?: Signer] | ConstructorParameters<typeof ContractFactory>;
export declare class PermissionedEIP712Proxy__factory extends ContractFactory {
    constructor(...args: PermissionedEIP712ProxyConstructorParams);
    deploy(eas: PromiseOrValue<string>, name: PromiseOrValue<string>, overrides?: Overrides & {
        from?: PromiseOrValue<string>;
    }): Promise<PermissionedEIP712Proxy>;
    getDeployTransaction(eas: PromiseOrValue<string>, name: PromiseOrValue<string>, overrides?: Overrides & {
        from?: PromiseOrValue<string>;
    }): TransactionRequest;
    attach(address: string): PermissionedEIP712Proxy;
    connect(signer: Signer): PermissionedEIP712Proxy__factory;
    static readonly bytecode = "0x6101606040908082523462000388576200255a80380380916200002382856200038d565b83398101908281830312620003885780519060018060a01b03928383169485840362000388576020838101516001600160401b039491939185821162000388570193601f93828587011215620003885785518281116200034e57845196601f199462000096838901871685018a6200038d565b8289528383830101116200038857829060005b8381106200037357505060009188010152835194848601868110848211176200034e57855281600396878152019662302e3160e81b88528681518483012098208860e0526101009b818d524660a052875191858301907f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f9b8c83528a85015260608401524660808401523060a084015260a0835260c0830192808410888511176200034e57838a525190206080523060c052610120998a521562000364575061014098895280519384116200034e57600054926001938481811c9116801562000343575b828210146200032d57838111620002e2575b5080928511600114620002795750839450908392916000946200026d575b50501b9160001990851b1c1916176000555b8154336001600160a01b031982168117909355905194167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0600080a36121a89384620003b28539608051846116e1015260a051846117ad015260c051846116b2015260e05184611730015251836117560152518261170d01525181818161040b015281816105f001528181610ba901528181610d2d01526110c30152f35b015192503880620001bd565b9294849081166000805284600020946000905b88838310620002c75750505010620002ae575b505050811b01600055620001cf565b015160001983871b60f8161c191690553880806200029f565b8587015188559096019594850194879350908101906200028c565b60008052816000208480880160051c82019284891062000323575b0160051c019085905b828110620003165750506200019f565b6000815501859062000306565b92508192620002fd565b634e487b7160e01b600052602260045260246000fd5b90607f16906200018d565b634e487b7160e01b600052604160045260246000fd5b6341bc07ff60e11b8152600490fd5b8181018301518a8201840152849201620000a9565b600080fd5b601f909101601f19168101906001600160401b038211908210176200034e5760405256fe6080604052600436101561001257600080fd5b6000803560e01c80630eabf66014610ffb57806310d736d514610f9d57806312b11a1714610f4457806317d7de7c14610de35780633c04271514610bcd57806365c40b9c14610b5e578063715018a614610abf5780638da5cb5b14610a6d57806395411525146104ca578063a6d4dbc714610310578063b83010d3146102b7578063ed24911d14610276578063f2fde38b146101395763ffa1ad74146100b757600080fd5b3461013657807ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc360112610136576101326040516100f481611573565b600381527f302e31000000000000000000000000000000000000000000000000000000000060208201526040519182916020835260208301906114c4565b0390f35b80fd5b50346101365760207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126101365760043573ffffffffffffffffffffffffffffffffffffffff8082168092036102715761019361161c565b81156101ed57600354827fffffffffffffffffffffffff0000000000000000000000000000000000000000821617600355167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0600080a380f35b60846040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f64647265737300000000000000000000000000000000000000000000000000006064820152fd5b600080fd5b503461013657807ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126101365760206102af61169b565b604051908152f35b503461013657807ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126101365760206040517f96bdbea8fa280f8a0d0835587e1fbb1470e81d05c44514158443340cea40a05d8152f35b506101007ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126101365761034461161c565b60405161035081611528565b60043580825261035f36612024565b602083015260607fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff9c3601126102715760405161039a816115a3565b60643560ff81168103610271578152608435602082015260a4356040820152604083015260c43573ffffffffffffffffffffffffffffffffffffffff90818116810361027157606084015260e43567ffffffffffffffff8116810361027157836104099160808796015261206a565b7f000000000000000000000000000000000000000000000000000000000000000016906040519061043982611573565b815261044436612024565b60208201908152823b156104c5576064849260209460405195869485937f4692626700000000000000000000000000000000000000000000000000000000855251600485015251805160248501520151604483015234905af180156104ba576104aa5750f35b6104b39061158f565b6101365780f35b6040513d84823e3d90fd5b505050fd5b5060207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126101365767ffffffffffffffff600435818111610a6957610516903690600401611470565b61051e61161c565b61052781611ec7565b9061053560405192836115db565b8082527fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe061056282611ec7565b01855b818110610a52575050845b81811061086957506040517f44adc90e0000000000000000000000000000000000000000000000000000000081526024810190602060048201528351809252604481016005926020604482861b85010196019189905b8282106107a4575050505086818073ffffffffffffffffffffffffffffffffffffffff96038134887f0000000000000000000000000000000000000000000000000000000000000000165af1958615610799578796610704575b5050508490855b818110610674578587604051918291602083016020845282518091526020604085019301915b81811061065b575050500390f35b825184528594506020938401939092019160010161064d565b61067f818387611ef9565b61068c6020820182611f68565b905060608992015b898284106106a85750505050600101610627565b819293966106b76040936119ae565b6106c1828d612010565b518352896001948594856020522091167fffffffffffffffffffffffff000000000000000000000000000000000000000082541617905501950190919091610694565b90919295503d8088843e61071881846115db565b82019160208184031261079157805191821161079157019181601f8401121561079557825192602061074985611ec7565b9461075760405196876115db565b808652818601931b82010192831161079157602001905b8282106107815750505092388080610620565b815181526020918201910161076e565b8780fd5b8680fd5b6040513d89823e3d90fd5b909192967fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffbc8582030182528a8851916020604082019380518352015192604060208301528351809152606091602083820193838c1b8301019501935b8281106108205750505050506020806001929901920192019092916105c6565b909192939460208061085c837fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffa087600196030189528951611944565b9701950193929101610800565b610874818386611ef9565b6108816020820182611f68565b9081158015610a3a575b610a10576080830135895b838110610939575050604051926108ac84611573565b3583526108b882611ec7565b916108c660405193846115db565b80835260051b8101602083013682116109355782905b82821061090c57505050506020820152600191906108fa8286612010565b526109058185612010565b5001610570565b81358b8111610931576020916109268392369088016117e8565b8152019101906108dc565b8c80fd5b8a80fd5b6109488160051b840184611911565b906109566040870187611fbc565b8293919310156109e35761096c606088016119ae565b908c851685036109df5773ffffffffffffffffffffffffffffffffffffffff6109d9926109c16001966109b0604051956109a587611528565b8d35875236906117e8565b6020860152369060608802016118d3565b60408401521660608201528c851660808201526119cf565b01610896565b8d80fd5b60248d7f4e487b710000000000000000000000000000000000000000000000000000000081526032600452fd5b60046040517f947d5a84000000000000000000000000000000000000000000000000000000008152fd5b50610a486040840184611fbc565b905082141561088b565b602090610a5d611edf565b82828701015201610565565b8280fd5b503461013657807ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261013657602073ffffffffffffffffffffffffffffffffffffffff60035416604051908152f35b503461013657807ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261013657610af661161c565b600073ffffffffffffffffffffffffffffffffffffffff6003547fffffffffffffffffffffffff00000000000000000000000000000000000000008116600355167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08280a380f35b503461013657807ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261013657602060405173ffffffffffffffffffffffffffffffffffffffff7f0000000000000000000000000000000000000000000000000000000000000000168152f35b506020907ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc9082823601126101365760043567ffffffffffffffff808211610a695760e082600401948336030112610a6957610c2761161c565b60405193610c3485611528565b80359485815260248401928335908111610ddf5791610ca2610cbd9492610c64610ca795600436918a01016117e8565b8a820152610c7536604489016118d3565b6040820152610c9860c460a4890198610c8d8a611507565b6060850152016117d3565b60808201526119cf565b611911565b60405194610cb486611573565b855236906117e8565b92848101938452610d0e6040519485927ff17325e700000000000000000000000000000000000000000000000000000000845287600485015251602484015251604060448401526064830190611944565b0390848473ffffffffffffffffffffffffffffffffffffffff938134867f0000000000000000000000000000000000000000000000000000000000000000165af1938415610dd4578394610da3575b50610d696040916119ae565b92848152600186522091167fffffffffffffffffffffffff0000000000000000000000000000000000000000825416179055604051908152f35b9093508481813d8311610dcd575b610dbb81836115db565b81010312610a69575192610d69610d5d565b503d610db1565b6040513d85823e3d90fd5b8580fd5b503461013657807ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc360112610136576040519080805491600183811c92818516948515610f3a575b6020958686108114610f0d57858852879493929187908215610ecc575050600114610e73575b5050610e5f925003836115db565b6101326040519282849384528301906114c4565b908592508180527f290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e5635b858310610eb4575050610e5f93508201013880610e51565b80548389018501528794508693909201918101610e9c565b91509350610e5f9592507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0091501682840152151560051b8201013880610e51565b6024837f4e487b710000000000000000000000000000000000000000000000000000000081526022600452fd5b93607f1693610e2b565b503461013657807ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126101365760206040517f4120d3b28306666b714826ad7cb70744d9658ad3e6cd873411bedadcf55afda78152f35b50346101365760207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126101365773ffffffffffffffffffffffffffffffffffffffff6040602092600435815260018452205416604051908152f35b5060207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126101365760043567ffffffffffffffff811161146c57611046903690600401611470565b9061104f61161c565b61105882611ec7565b9161106660405193846115db565b8083527fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe061109382611ec7565b01845b81811061145557505090835b8281106112015750505073ffffffffffffffffffffffffffffffffffffffff7f000000000000000000000000000000000000000000000000000000000000000016803b15610a69579082906040519283917f4cb7e9e5000000000000000000000000000000000000000000000000000000008352602483016020600485015281518091526044840190602060448260051b87010193019186905b82821061116a5750505050828091039134905af180156104ba5761115e575080f35b6111679061158f565b80f35b9295847fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffbc929593969850030182528451602060608160408501938051865201519360408382015284518094520192019089905b8082106111df575050506020806001929601920192019287959387959361113c565b90919260206040600192828751805183520151838201520194019201906111bd565b61120f818484959794611ef9565b9160a083360312610136576040519361122785611528565b83358552602084013567ffffffffffffffff8111610a69578401601f9436868301121561141c57813561125981611ec7565b9261126760405194856115db565b81845260208085019260061b8201019036821161079557602001915b8183106114245750505060208701918252604081013567ffffffffffffffff81116114205781019536908701121561141c578535956112c187611ec7565b966112cf60405198896115db565b80885260206060818a0192028301019136831161079557602001905b828210611402575050506080611318918760408a015261130d60608201611507565b60608a0152016117d3565b60808701525193845180159182156113f6575b5050610a1057815b84518110156113b957806113b361134c60019388612010565b5188519061135e8460408c0151612010565b5173ffffffffffffffffffffffffffffffffffffffff60608c0151169067ffffffffffffffff60808d015116926040519461139886611528565b8552602085015260408401526060830152608082015261206a565b01611333565b50935160405191969360019392916113d083611573565b825260208201526113e18287612010565b526113ec8186612010565b50019190916110a2565b5114159050388061132b565b602060609161141136856118d3565b8152019101906112eb565b8380fd5b8480fd5b604083360312610795576020604091825161143e81611573565b853581528286013583820152815201920191611283565b602090611460611edf565b82828801015201611096565b5080fd5b9181601f840112156102715782359167ffffffffffffffff8311610271576020808501948460051b01011161027157565b60005b8381106114b45750506000910152565b81810151838201526020016114a4565b907fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f602093611500815180928187528780880191016114a1565b0116010190565b359073ffffffffffffffffffffffffffffffffffffffff8216820361027157565b60a0810190811067ffffffffffffffff82111761154457604052565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6040810190811067ffffffffffffffff82111761154457604052565b67ffffffffffffffff811161154457604052565b6060810190811067ffffffffffffffff82111761154457604052565b6080810190811067ffffffffffffffff82111761154457604052565b90601f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0910116810190811067ffffffffffffffff82111761154457604052565b73ffffffffffffffffffffffffffffffffffffffff60035416330361163d57565b60646040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602060248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152fd5b73ffffffffffffffffffffffffffffffffffffffff7f0000000000000000000000000000000000000000000000000000000000000000163014806117aa575b15611703577f000000000000000000000000000000000000000000000000000000000000000090565b60405160208101907f000000000000000000000000000000000000000000000000000000000000000082527f000000000000000000000000000000000000000000000000000000000000000060408201527f000000000000000000000000000000000000000000000000000000000000000060608201524660808201523060a082015260a0815260c0810181811067ffffffffffffffff8211176115445760405251902090565b507f000000000000000000000000000000000000000000000000000000000000000046146116da565b359067ffffffffffffffff8216820361027157565b919060c083820312610271576040519067ffffffffffffffff60c083018181118482101761154457604052829461181e81611507565b845260209261182e8483016117d3565b848601526040820135801515810361027157604086015260608201356060860152608082013583811161027157820181601f8201121561027157803593841161154457604051916118a6867fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f88011601846115db565b84835285858301011161027157848460a09695879660009401838601378301015260808501520135910152565b9190826060910312610271576040516118eb816115a3565b8092803560ff811681036102715760409182918452602081013560208501520135910152565b9035907fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff4181360301821215610271570190565b9073ffffffffffffffffffffffffffffffffffffffff825116815267ffffffffffffffff60208301511660208201526040820151151560408201526060820151606082015260a0806119a5608085015160c0608086015260c08501906114c4565b93015191015290565b3573ffffffffffffffffffffffffffffffffffffffff811681036102715790565b608081019067ffffffffffffffff808351168015159081611b43575b50611b19576020820151906040938484015193611a0785611dd7565b80519173ffffffffffffffffffffffffffffffffffffffff9485815116918560208301511691898101511515876080606084015193015160208151910120935116938b519560208701987f4120d3b28306666b714826ad7cb70744d9658ad3e6cd873411bedadcf55afda78a528d8801526060870152608086015260a085015260c084015260e0830152610100908183015281526101208101938185109085111761154457611ae395611ac6606094611adb9388978b52519020611d85565b9060ff81511689602083015192015192611ce9565b959095611b50565b015116911603611af05750565b600490517f8baa579f000000000000000000000000000000000000000000000000000000008152fd5b60046040517f1ab7da6b000000000000000000000000000000000000000000000000000000008152fd5b90508142161015386119eb565b6005811015611cba5780611b615750565b60018103611bc75760646040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601860248201527f45434453413a20696e76616c6964207369676e617475726500000000000000006044820152fd5b60028103611c2d5760646040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601f60248201527f45434453413a20696e76616c6964207369676e6174757265206c656e677468006044820152fd5b600314611c3657565b60846040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202773272076616c60448201527f75650000000000000000000000000000000000000000000000000000000000006064820152fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b9291907f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a08311611d795791608094939160ff602094604051948552168484015260408301526060820152600093849182805260015afa15611d6c57815173ffffffffffffffffffffffffffffffffffffffff811615611d66579190565b50600190565b50604051903d90823e3d90fd5b50505050600090600390565b611d8d61169b565b906040519060208201927f190100000000000000000000000000000000000000000000000000000000000084526022830152604282015260428152611dd1816115bf565b51902090565b80519060406020820151910151604051917fff00000000000000000000000000000000000000000000000000000000000000602084019460f81b1684526021830152604182015260418152611e2b816115bf565b60ff6040516020818451611e408183896114a1565b810160028152030190205416611e9d57611e68916020916040519384928392519283916114a1565b8101600281520301902060017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00825416179055565b60046040517fcce9a824000000000000000000000000000000000000000000000000000000008152fd5b67ffffffffffffffff81116115445760051b60200190565b60405190611eec82611573565b6060602083600081520152565b9190811015611f395760051b810135907fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff6181360301821215610271570190565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b9035907fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe181360301821215610271570180359067ffffffffffffffff821161027157602001918160051b3603831361027157565b9035907fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe181360301821215610271570180359067ffffffffffffffff82116102715760200191606082023603831361027157565b8051821015611f395760209160051b010190565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffdc6040910112610271576040519061205b82611573565b60243582526044356020830152565b608081019067ffffffffffffffff9081835116801515908161218e575b50611b19576020810151918251600052600160205273ffffffffffffffffffffffffffffffffffffffff9260409484866000205416801561216557330361213c5792611adb859493611ac6606094611ae398968a860151936120e885611dd7565b865192519151168b519160208301937f96bdbea8fa280f8a0d0835587e1fbb1470e81d05c44514158443340cea40a05d85528d8401528883015260808201526080815261213481611528565b519020611d85565b600486517f4ca88867000000000000000000000000000000000000000000000000000000008152fd5b600487517fc5723b51000000000000000000000000000000000000000000000000000000008152fd5b905082421610153861208756fea164736f6c6343000813000a";
    static readonly abi: readonly [{
        readonly inputs: readonly [{
            readonly internalType: "contract IEAS";
            readonly name: "eas";
            readonly type: "address";
        }, {
            readonly internalType: "string";
            readonly name: "name";
            readonly type: "string";
        }];
        readonly stateMutability: "nonpayable";
        readonly type: "constructor";
    }, {
        readonly inputs: readonly [];
        readonly name: "AccessDenied";
        readonly type: "error";
    }, {
        readonly inputs: readonly [];
        readonly name: "DeadlineExpired";
        readonly type: "error";
    }, {
        readonly inputs: readonly [];
        readonly name: "InvalidEAS";
        readonly type: "error";
    }, {
        readonly inputs: readonly [];
        readonly name: "InvalidLength";
        readonly type: "error";
    }, {
        readonly inputs: readonly [];
        readonly name: "InvalidSignature";
        readonly type: "error";
    }, {
        readonly inputs: readonly [];
        readonly name: "NotFound";
        readonly type: "error";
    }, {
        readonly inputs: readonly [];
        readonly name: "UsedSignature";
        readonly type: "error";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: true;
            readonly internalType: "address";
            readonly name: "previousOwner";
            readonly type: "address";
        }, {
            readonly indexed: true;
            readonly internalType: "address";
            readonly name: "newOwner";
            readonly type: "address";
        }];
        readonly name: "OwnershipTransferred";
        readonly type: "event";
    }, {
        readonly inputs: readonly [];
        readonly name: "VERSION";
        readonly outputs: readonly [{
            readonly internalType: "string";
            readonly name: "";
            readonly type: "string";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly components: readonly [{
                readonly internalType: "bytes32";
                readonly name: "schema";
                readonly type: "bytes32";
            }, {
                readonly components: readonly [{
                    readonly internalType: "address";
                    readonly name: "recipient";
                    readonly type: "address";
                }, {
                    readonly internalType: "uint64";
                    readonly name: "expirationTime";
                    readonly type: "uint64";
                }, {
                    readonly internalType: "bool";
                    readonly name: "revocable";
                    readonly type: "bool";
                }, {
                    readonly internalType: "bytes32";
                    readonly name: "refUID";
                    readonly type: "bytes32";
                }, {
                    readonly internalType: "bytes";
                    readonly name: "data";
                    readonly type: "bytes";
                }, {
                    readonly internalType: "uint256";
                    readonly name: "value";
                    readonly type: "uint256";
                }];
                readonly internalType: "struct AttestationRequestData";
                readonly name: "data";
                readonly type: "tuple";
            }, {
                readonly components: readonly [{
                    readonly internalType: "uint8";
                    readonly name: "v";
                    readonly type: "uint8";
                }, {
                    readonly internalType: "bytes32";
                    readonly name: "r";
                    readonly type: "bytes32";
                }, {
                    readonly internalType: "bytes32";
                    readonly name: "s";
                    readonly type: "bytes32";
                }];
                readonly internalType: "struct EIP712Signature";
                readonly name: "signature";
                readonly type: "tuple";
            }, {
                readonly internalType: "address";
                readonly name: "attester";
                readonly type: "address";
            }, {
                readonly internalType: "uint64";
                readonly name: "deadline";
                readonly type: "uint64";
            }];
            readonly internalType: "struct DelegatedProxyAttestationRequest";
            readonly name: "delegatedRequest";
            readonly type: "tuple";
        }];
        readonly name: "attestByDelegation";
        readonly outputs: readonly [{
            readonly internalType: "bytes32";
            readonly name: "";
            readonly type: "bytes32";
        }];
        readonly stateMutability: "payable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "getAttestTypeHash";
        readonly outputs: readonly [{
            readonly internalType: "bytes32";
            readonly name: "";
            readonly type: "bytes32";
        }];
        readonly stateMutability: "pure";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "bytes32";
            readonly name: "uid";
            readonly type: "bytes32";
        }];
        readonly name: "getAttester";
        readonly outputs: readonly [{
            readonly internalType: "address";
            readonly name: "";
            readonly type: "address";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "getDomainSeparator";
        readonly outputs: readonly [{
            readonly internalType: "bytes32";
            readonly name: "";
            readonly type: "bytes32";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "getEAS";
        readonly outputs: readonly [{
            readonly internalType: "contract IEAS";
            readonly name: "";
            readonly type: "address";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "getName";
        readonly outputs: readonly [{
            readonly internalType: "string";
            readonly name: "";
            readonly type: "string";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "getRevokeTypeHash";
        readonly outputs: readonly [{
            readonly internalType: "bytes32";
            readonly name: "";
            readonly type: "bytes32";
        }];
        readonly stateMutability: "pure";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly components: readonly [{
                readonly internalType: "bytes32";
                readonly name: "schema";
                readonly type: "bytes32";
            }, {
                readonly components: readonly [{
                    readonly internalType: "address";
                    readonly name: "recipient";
                    readonly type: "address";
                }, {
                    readonly internalType: "uint64";
                    readonly name: "expirationTime";
                    readonly type: "uint64";
                }, {
                    readonly internalType: "bool";
                    readonly name: "revocable";
                    readonly type: "bool";
                }, {
                    readonly internalType: "bytes32";
                    readonly name: "refUID";
                    readonly type: "bytes32";
                }, {
                    readonly internalType: "bytes";
                    readonly name: "data";
                    readonly type: "bytes";
                }, {
                    readonly internalType: "uint256";
                    readonly name: "value";
                    readonly type: "uint256";
                }];
                readonly internalType: "struct AttestationRequestData[]";
                readonly name: "data";
                readonly type: "tuple[]";
            }, {
                readonly components: readonly [{
                    readonly internalType: "uint8";
                    readonly name: "v";
                    readonly type: "uint8";
                }, {
                    readonly internalType: "bytes32";
                    readonly name: "r";
                    readonly type: "bytes32";
                }, {
                    readonly internalType: "bytes32";
                    readonly name: "s";
                    readonly type: "bytes32";
                }];
                readonly internalType: "struct EIP712Signature[]";
                readonly name: "signatures";
                readonly type: "tuple[]";
            }, {
                readonly internalType: "address";
                readonly name: "attester";
                readonly type: "address";
            }, {
                readonly internalType: "uint64";
                readonly name: "deadline";
                readonly type: "uint64";
            }];
            readonly internalType: "struct MultiDelegatedProxyAttestationRequest[]";
            readonly name: "multiDelegatedRequests";
            readonly type: "tuple[]";
        }];
        readonly name: "multiAttestByDelegation";
        readonly outputs: readonly [{
            readonly internalType: "bytes32[]";
            readonly name: "";
            readonly type: "bytes32[]";
        }];
        readonly stateMutability: "payable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly components: readonly [{
                readonly internalType: "bytes32";
                readonly name: "schema";
                readonly type: "bytes32";
            }, {
                readonly components: readonly [{
                    readonly internalType: "bytes32";
                    readonly name: "uid";
                    readonly type: "bytes32";
                }, {
                    readonly internalType: "uint256";
                    readonly name: "value";
                    readonly type: "uint256";
                }];
                readonly internalType: "struct RevocationRequestData[]";
                readonly name: "data";
                readonly type: "tuple[]";
            }, {
                readonly components: readonly [{
                    readonly internalType: "uint8";
                    readonly name: "v";
                    readonly type: "uint8";
                }, {
                    readonly internalType: "bytes32";
                    readonly name: "r";
                    readonly type: "bytes32";
                }, {
                    readonly internalType: "bytes32";
                    readonly name: "s";
                    readonly type: "bytes32";
                }];
                readonly internalType: "struct EIP712Signature[]";
                readonly name: "signatures";
                readonly type: "tuple[]";
            }, {
                readonly internalType: "address";
                readonly name: "revoker";
                readonly type: "address";
            }, {
                readonly internalType: "uint64";
                readonly name: "deadline";
                readonly type: "uint64";
            }];
            readonly internalType: "struct MultiDelegatedProxyRevocationRequest[]";
            readonly name: "multiDelegatedRequests";
            readonly type: "tuple[]";
        }];
        readonly name: "multiRevokeByDelegation";
        readonly outputs: readonly [];
        readonly stateMutability: "payable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "owner";
        readonly outputs: readonly [{
            readonly internalType: "address";
            readonly name: "";
            readonly type: "address";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "renounceOwnership";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly components: readonly [{
                readonly internalType: "bytes32";
                readonly name: "schema";
                readonly type: "bytes32";
            }, {
                readonly components: readonly [{
                    readonly internalType: "bytes32";
                    readonly name: "uid";
                    readonly type: "bytes32";
                }, {
                    readonly internalType: "uint256";
                    readonly name: "value";
                    readonly type: "uint256";
                }];
                readonly internalType: "struct RevocationRequestData";
                readonly name: "data";
                readonly type: "tuple";
            }, {
                readonly components: readonly [{
                    readonly internalType: "uint8";
                    readonly name: "v";
                    readonly type: "uint8";
                }, {
                    readonly internalType: "bytes32";
                    readonly name: "r";
                    readonly type: "bytes32";
                }, {
                    readonly internalType: "bytes32";
                    readonly name: "s";
                    readonly type: "bytes32";
                }];
                readonly internalType: "struct EIP712Signature";
                readonly name: "signature";
                readonly type: "tuple";
            }, {
                readonly internalType: "address";
                readonly name: "revoker";
                readonly type: "address";
            }, {
                readonly internalType: "uint64";
                readonly name: "deadline";
                readonly type: "uint64";
            }];
            readonly internalType: "struct DelegatedProxyRevocationRequest";
            readonly name: "delegatedRequest";
            readonly type: "tuple";
        }];
        readonly name: "revokeByDelegation";
        readonly outputs: readonly [];
        readonly stateMutability: "payable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "newOwner";
            readonly type: "address";
        }];
        readonly name: "transferOwnership";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }];
    static createInterface(): PermissionedEIP712ProxyInterface;
    static connect(address: string, signerOrProvider: Signer | Provider): PermissionedEIP712Proxy;
}
export {};
//# sourceMappingURL=PermissionedEIP712Proxy__factory.d.ts.map